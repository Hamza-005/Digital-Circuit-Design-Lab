library IEEE;use IEEE.STD_LOGIC_1164.ALL;use IEEE.STD_LOGIC_UNSIGNED.ALL;use IEEE.NUMERIC_STD.ALL;entity divider_tb isend divider_tb;architecture testbench of divider_tb is    signal CLK_tb : STD_LOGIC := '0';    signal A_tb, B_tb, Q_tb, R_tb : STD_LOGIC_VECTOR(3 downto 0) := "0000";begin    uut : entity work.divider        port map (CLK_tb, A_tb, B_tb, Q_tb, R_tb);    process    begin        while true loop            CLK_tb <= not CLK_tb after 2 ns;            wait for 2 ns;        end loop;    end process;    process    begin        wait for 2 ns;        for i in 0 to 15 loop            for j in 1 to 14 loop                A_tb <= std_logic_vector(to_unsigned(i, 4));                B_tb <= std_logic_vector(to_unsigned(j, 4));                wait for 2 ns;                report "Case: A = " & to_string(A_tb) &                      ", B = " & to_string(B_tb) &                      ", Q = " & to_string(Q_tb) &                      ", R = " & to_string(R_tb);            end loop;        end loop;        wait;    end process;end testbench;